import Action from '../../action';
import { RiotRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
import { TournamentRegistrationParameters } from '../../../interfaces/parameters';
declare const BaseAction: {
    new (...args: any[]): {
        body<K extends import("../../mixins/body").BodyChainable<TournamentRegistrationParameters> & import("../../mixins/executable").Executable>(this: K, body: TournamentRegistrationParameters): Omit<K, "body">;
    };
} & {
    new (...args: any[]): {
        region<K_1 extends import("../../mixins/region").RegionChainable<RiotRegion> & import("../../mixins/executable").Executable>(this: K_1, region: RiotRegion): Omit<K_1, "region">;
    };
} & typeof Action;
export default class PostTournaments extends BaseAction<number> {
    constructor(submodules: SubmoduleMap);
}
export {};
//# sourceMappingURL=tournaments.d.ts.map