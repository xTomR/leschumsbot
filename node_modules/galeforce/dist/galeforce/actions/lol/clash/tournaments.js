"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const action_1 = __importDefault(require("../../action"));
const riot_api_1 = require("../../../../riot-api");
const mixins_1 = require("../../mixins");
const BaseAction = mixins_1.TakesTournamentId(mixins_1.TakesTeamId(mixins_1.TakesRegion({}, action_1.default)));
class GetClashTournament extends BaseAction {
    constructor(submodules) {
        super(submodules);
        this.payload.type = 'lol';
        this.payload.method = 'GET';
    }
    inferEndpoint() {
        if (this.payload.tournamentId) {
            this.payload.endpoint = riot_api_1.ENDPOINTS.CLASH.GET_TOURNAMENT;
        }
        else if (this.payload.teamId) {
            this.payload.endpoint = riot_api_1.ENDPOINTS.CLASH.GET_TEAM_TOURNAMENT;
        }
        else {
            throw new Error('[galeforce]: Not enough parameters provided to select API endpoint.');
        }
    }
}
exports.default = GetClashTournament;
//# sourceMappingURL=tournaments.js.map