import Action from '../../action';
import { LeagueRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
import { TournamentDTO } from '../../../interfaces/dto';
declare const BaseAction: {
    new (...args: any[]): {
        tournamentId<K extends import("../../mixins/tournament-id").TournamentIdChainable & import("../../mixins/executable").Executable>(this: K, tournamentId: number): Omit<K, "tournamentId">;
    };
} & {
    new (...args: any[]): {
        teamId<K_1 extends import("../../mixins/team-id").TeamIdChainable & import("../../mixins/executable").Executable>(this: K_1, teamId: string): Omit<K_1, "teamId">;
    };
} & {
    new (...args: any[]): {
        region<K_2 extends import("../../mixins/region").RegionChainable<LeagueRegion> & import("../../mixins/executable").Executable>(this: K_2, region: LeagueRegion): Omit<K_2, "region">;
    };
} & typeof Action;
export default class GetClashTournament extends BaseAction<TournamentDTO> {
    constructor(submodules: SubmoduleMap);
    protected inferEndpoint(): void;
}
export {};
//# sourceMappingURL=tournaments.d.ts.map