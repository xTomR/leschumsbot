import Action from '../../action';
import { SummonerDTO } from '../../../interfaces/dto';
import { LeagueRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
declare const BaseAction: {
    new (...args: any[]): {
        name<K extends import("../../mixins/summoner-name").SummonerNameChainable & import("../../mixins/executable").Executable>(this: K, summonerName: string): Omit<K, "name">;
    };
} & {
    new (...args: any[]): {
        summonerId<K_1 extends import("../../mixins/summoner-id").SummonerIdChainable & import("../../mixins/executable").Executable>(this: K_1, summonerId: string): Omit<K_1, "summonerId">;
    };
} & {
    new (...args: any[]): {
        accountId<K_2 extends import("../../mixins/account-id").AccountIdChainable & import("../../mixins/executable").Executable>(this: K_2, accountId: string): Omit<K_2, "accountId">;
    };
} & {
    new (...args: any[]): {
        puuid<K_3 extends import("../../mixins/puuid").PUUIDChainable & import("../../mixins/executable").Executable>(this: K_3, puuid: string): Omit<K_3, "puuid">;
    };
} & {
    new (...args: any[]): {
        region<K_4 extends import("../../mixins/region").RegionChainable<LeagueRegion> & import("../../mixins/executable").Executable>(this: K_4, region: LeagueRegion): Omit<K_4, "region">;
    };
} & typeof Action;
export default class GetSummoner extends BaseAction<SummonerDTO> {
    constructor(submodules: SubmoduleMap);
    protected inferEndpoint(): void;
}
export {};
//# sourceMappingURL=index.d.ts.map