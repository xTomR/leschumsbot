import Action from '../../action';
import { LeagueListDTO } from '../../../interfaces/dto';
import { LeagueRegion, LeagueQueue, Tier } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
declare const BaseAction: {
    new (...args: any[]): {
        queue<K extends import("../../mixins/queue").QueueChainable<LeagueQueue> & import("../../mixins/executable").Executable>(this: K, queue: LeagueQueue): Omit<K, "queue">;
    };
} & {
    new (...args: any[]): {
        tier<K_1 extends import("../../mixins/tier").TierChainable & import("../../mixins/executable").Executable>(this: K_1, tier: Tier): Omit<K_1, "tier">;
    };
} & {
    new (...args: any[]): {
        leagueId<K_2 extends import("../../mixins/league-id").LeagueIdChainable & import("../../mixins/executable").Executable>(this: K_2, leagueId: string): Omit<K_2, "leagueId">;
    };
} & {
    new (...args: any[]): {
        region<K_3 extends import("../../mixins/region").RegionChainable<LeagueRegion> & import("../../mixins/executable").Executable>(this: K_3, region: LeagueRegion): Omit<K_3, "region">;
    };
} & typeof Action;
export default class GetLeagueList extends BaseAction<LeagueListDTO> {
    constructor(submodules: SubmoduleMap);
    protected inferEndpoint(): void;
}
export {};
//# sourceMappingURL=leagues.d.ts.map