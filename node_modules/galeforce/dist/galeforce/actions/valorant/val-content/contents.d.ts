import Action from '../../action';
import { ValorantRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
import { ValContentDTO } from '../../../interfaces/dto';
declare type GetValorantContentQuery = {
    locale?: string;
};
declare const BaseAction: {
    new (...args: any[]): {
        query<K extends import("../../mixins/query").QueryChainable<GetValorantContentQuery> & import("../../mixins/executable").Executable>(this: K, query: GetValorantContentQuery): Omit<K, "query">;
    };
} & {
    new (...args: any[]): {
        region<K_1 extends import("../../mixins/region").RegionChainable<ValorantRegion> & import("../../mixins/executable").Executable>(this: K_1, region: ValorantRegion): Omit<K_1, "region">;
    };
} & typeof Action;
export default class GetValorantContent extends BaseAction<ValContentDTO> {
    constructor(submodules: SubmoduleMap);
}
export {};
//# sourceMappingURL=contents.d.ts.map