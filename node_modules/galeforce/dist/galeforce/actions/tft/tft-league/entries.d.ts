import Action from '../../action';
import { LeagueEntryDTO } from '../../../interfaces/dto';
import { Tier, LeagueRegion } from '../../../../riot-api';
import SubmoduleMap from '../../../interfaces/submodule-map';
declare type GetTFTLeagueEntriesQuery = {
    page?: number;
};
declare const BaseAction: {
    new (...args: any[]): {
        query<K extends import("../../mixins/query").QueryChainable<GetTFTLeagueEntriesQuery> & import("../../mixins/executable").Executable>(this: K, query: GetTFTLeagueEntriesQuery): Omit<K, "query">;
    };
} & {
    new (...args: any[]): {
        tier<K_1 extends import("../../mixins/tier").TierChainable & import("../../mixins/executable").Executable>(this: K_1, tier: Tier): Omit<K_1, "tier">;
    };
} & {
    new (...args: any[]): {
        division<K_2 extends import("../../mixins/division").DivisionChainable & import("../../mixins/executable").Executable>(this: K_2, division: import("../../../../riot-api/enums/divisions").default): Omit<K_2, "division">;
    };
} & {
    new (...args: any[]): {
        summonerId<K_3 extends import("../../mixins/summoner-id").SummonerIdChainable & import("../../mixins/executable").Executable>(this: K_3, summonerId: string): Omit<K_3, "summonerId">;
    };
} & {
    new (...args: any[]): {
        region<K_4 extends import("../../mixins/region").RegionChainable<LeagueRegion> & import("../../mixins/executable").Executable>(this: K_4, region: LeagueRegion): Omit<K_4, "region">;
    };
} & typeof Action;
export default class GetTFTLeagueEntries extends BaseAction<LeagueEntryDTO[]> {
    constructor(submodules: SubmoduleMap);
    protected inferEndpoint(): void;
}
export {};
//# sourceMappingURL=entries.d.ts.map