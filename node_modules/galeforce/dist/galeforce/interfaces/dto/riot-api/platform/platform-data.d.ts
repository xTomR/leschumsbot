declare enum MaintenanceStatus {
    SCHEDULED = "scheduled",
    IN_PROGRESS = "in_progress",
    COMPLETE = "complete"
}
declare enum IncidentSeverity {
    INFO = "info",
    WARNING = "warning",
    CRITICAL = "critical"
}
declare enum Platform {
    WINDOWS = "windows",
    MACOS = "macos",
    ANDROID = "android",
    IOS = "ios",
    PS4 = "ps4",
    XBONE = "xbone",
    SWITCH = "switch"
}
declare enum PublishLocations {
    RIOT_CLIENT = "riotclient",
    RIOT_STATUS = "riotstatus",
    GAME = "game"
}
interface ContentDTO {
    locale: string;
    content: string;
}
interface UpdateDTO {
    id: number;
    author: string;
    publish: boolean;
    publish_locations: PublishLocations[];
    translations: ContentDTO[];
    created_at: string;
    updated_at: string;
}
interface StatusDTO {
    id: number;
    maintenance_status: MaintenanceStatus | null;
    incident_severity: IncidentSeverity;
    titles: ContentDTO[];
    updates: UpdateDTO[];
    created_at: string;
    archive_at: string | null;
    updated_at: string | null;
    platforms: Platform[];
}
export interface PlatformDataDTO {
    id: string;
    name: string;
    locales: string[];
    maintenances: StatusDTO[];
    incidents: StatusDTO[];
}
export {};
//# sourceMappingURL=platform-data.d.ts.map